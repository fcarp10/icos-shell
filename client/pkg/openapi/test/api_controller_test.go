/*
ICOS Shell

Testing ControllerApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"testing"

	openapi "shellclient/pkg/openapi"

	"github.com/spf13/viper"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_openapi_ControllerApiService(t *testing.T) {

	openapi.Init("lighthouse.icos-project.eu:8080")

	t.Run("Test ControllerApiService AddController", func(t *testing.T) {

		// t.Skip("skip test") // remove to run test

		// httpRes, err := openapi.Client.ControllerApi.AddController(context.Background()).Execute()
		controller := *openapi.NewController("name_test", "address_test")
		token := viper.GetString("auth_token")
		httpRes, err := openapi.Client.ControllerAPI.AddController(context.Background()).ApiKey(token).Controller(controller).Execute()

		require.Nil(t, err)
		assert.Equal(t, 201, httpRes.StatusCode)

	})

	t.Run("Test ControllerApiService GetControllers", func(t *testing.T) {

		// t.Skip("skip test") // remove to run test

		resp, httpRes, err := openapi.Client.ControllerAPI.GetControllers(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
